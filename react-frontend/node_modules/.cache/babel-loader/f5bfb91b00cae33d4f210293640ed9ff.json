{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/Cassie/Documents/School/wwn-app/src/components/pages/search/map.js\";\nimport React, { Component } from 'react';\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '100%',\n  height: '400px'\n};\n\nclass Map extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      lat: 33.7872131,\n      lng: -84.381931\n    };\n    this.locations = {\n      lat: 33.7872131,\n      lng: -84.381931\n    };\n  }\n\n  componentDidMount() {\n    navigator.geolocation.getCurrentPosition(success => {\n      this.setState({\n        lat: success.coords.latitude,\n        lng: success.coords.longitude\n      });\n      console.log(this.state);\n    });\n    fetch('http://localhost/wwn/index.php/location/list?limit=20', {}).then(data => {\n      // Here you need to use an temporary array to store NeededInfo only \n      let locations = data;\n      this.setState({\n        other: locations\n      });\n    }).catch(error => console.log('Authorization failed : ' + error.message));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(LoadScript, {\n      googleMapsApiKey: \"AIzaSyB0-ftuMjsHGds4c5TrWgEa7h6ilMfJye8\",\n      children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n        mapContainerStyle: containerStyle,\n        center: this.state,\n        zoom: 10,\n        children: /*#__PURE__*/_jsxDEV(Marker, {\n          position: {\n            lat: -34.397,\n            lng: 150.644\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Map;","map":{"version":3,"sources":["/mnt/c/Users/Cassie/Documents/School/wwn-app/src/components/pages/search/map.js"],"names":["React","Component","GoogleMap","LoadScript","Marker","containerStyle","width","height","Map","state","lat","lng","locations","componentDidMount","navigator","geolocation","getCurrentPosition","success","setState","coords","latitude","longitude","console","log","fetch","then","data","other","catch","error","message","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,EAAoBC,UAApB,EAA+BC,MAA/B,QAA6C,wBAA7C;;AAEA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,KAAK,EAAE,MADc;AAErBC,EAAAA,MAAM,EAAE;AAFa,CAAvB;;AAKA,MAAMC,GAAN,SAAkBR,KAAK,CAACC,SAAxB,CAAiC;AAAA;AAAA;AAAA,SAIjCQ,KAJiC,GAIzB;AAAEC,MAAAA,GAAG,EAAC,UAAN;AAAmBC,MAAAA,GAAG,EAAE,CAAC;AAAzB,KAJyB;AAAA,SAKjCC,SALiC,GAKrB;AAAEF,MAAAA,GAAG,EAAC,UAAN;AAAmBC,MAAAA,GAAG,EAAE,CAAC;AAAzB,KALqB;AAAA;;AAOjCE,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CACIC,OAAO,IAAI;AACP,WAAKC,QAAL,CAAc;AAAER,QAAAA,GAAG,EAAEO,OAAO,CAACE,MAAR,CAAeC,QAAtB;AAAgCT,QAAAA,GAAG,EAAEM,OAAO,CAACE,MAAR,CAAeE;AAApD,OAAd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKd,KAAjB;AACH,KAJL;AAOAe,IAAAA,KAAK,CAAC,uDAAD,EAA0D,EAA1D,CAAL,CAECC,IAFD,CAEMC,IAAI,IAAI;AACV;AACA,UAAId,SAAS,GAAGc,IAAhB;AACA,WAAKR,QAAL,CAAc;AACVS,QAAAA,KAAK,EAAEf;AADG,OAAd;AAGH,KARD,EASCgB,KATD,CASOC,KAAK,IAAIP,OAAO,CAACC,GAAR,CAAY,4BAA4BM,KAAK,CAACC,OAA9C,CAThB;AAUH;;AAGCC,EAAAA,MAAM,GAAG;AACP,wBAEE,QAAC,UAAD;AACE,MAAA,gBAAgB,EAAC,yCADnB;AAAA,6BAGE,QAAC,SAAD;AACE,QAAA,iBAAiB,EAAE1B,cADrB;AAEE,QAAA,MAAM,EAAE,KAAKI,KAFf;AAGE,QAAA,IAAI,EAAE,EAHR;AAAA,+BAMA,QAAC,MAAD;AAAQ,UAAA,QAAQ,EAAE;AAAEC,YAAAA,GAAG,EAAE,CAAC,MAAR;AAAgBC,YAAAA,GAAG,EAAE;AAArB;AAAlB;AAAA;AAAA;AAAA;AAAA;AANA;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,YAFF;AAeH;;AA5CgC;;AA+CjC,eAAeH,GAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { GoogleMap, LoadScript,Marker } from '@react-google-maps/api';\r\n\r\nconst containerStyle = {\r\n  width: '100%',\r\n  height: '400px'\r\n};\r\n\r\nclass Map extends React.Component{\r\n\r\n\r\n \r\nstate = { lat:33.7872131 , lng: -84.381931 };\r\nlocations = { lat:33.7872131 , lng: -84.381931 };\r\n\r\ncomponentDidMount() {\r\n    navigator.geolocation.getCurrentPosition(\r\n        success => {\r\n            this.setState({ lat: success.coords.latitude, lng: success.coords.longitude });\r\n            console.log(this.state);\r\n        }\r\n    );\r\n\r\n    fetch('http://localhost/wwn/index.php/location/list?limit=20', {\r\n    })\r\n    .then(data => {\r\n        // Here you need to use an temporary array to store NeededInfo only \r\n        let locations = data;\r\n        this.setState({\r\n            other: locations\r\n        })\r\n    })\r\n    .catch(error => console.log('Authorization failed : ' + error.message));\r\n}\r\n\r\n\r\n  render() {\r\n    return (\r\n\r\n      <LoadScript\r\n        googleMapsApiKey=\"AIzaSyB0-ftuMjsHGds4c5TrWgEa7h6ilMfJye8\"\r\n      >\r\n        <GoogleMap\r\n          mapContainerStyle={containerStyle}\r\n          center={this.state}\r\n          zoom={10}\r\n        >\r\n        \r\n        <Marker position={{ lat: -34.397, lng: 150.644 }}/> \r\n        </GoogleMap>\r\n      </LoadScript>\r\n    );\r\n}\r\n}\r\n\r\nexport default Map"]},"metadata":{},"sourceType":"module"}